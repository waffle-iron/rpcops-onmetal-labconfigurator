# Keeping for historical reasons but not needed as cobbler has been removed
#clear_cobbler() {
#  echo -e "Removing all cobbler systems"
#  for i in `cobbler system list`; do cobbler system remove --name $i; done;
#
#  echo -e "Removing all cobbler profiles"
#  for i in `cobbler profile list`; do cobbler profile remove --name $i; done;
#
#  echo -e "Removing all cobbler repos"
#  for i in `cobbler repo list`; do cobbler repo remove --name $i; done;
#
#  echo -e "Removing all cobbler distros"
#  for i in `cobbler distro list`; do cobbler distro remove --name $i; done;
#
#  echo -e "Removing custom preseed and resyncing cobbler"
#  rm -f /var/lib/cobbler/kickstarts/ubuntu-server-14.04-unattended-cobbler.seed;
#  cobbler sync;
#}

get_all_hosts () {
python <<EOF
import json
with open('resources/labconfigs/${LAB_CONFIG}.json') as f:
    x = json.loads(f.read())
for i in x.values():
    for k, v in i.items():
      print('%s:%s' % (k, v))
EOF
}

destroy_all() {
  echo -e "Completing removing OpenStack VMs\n"
  # Change to libvirt images directory
  pushd /var/lib/libvirt/images

  # Force shutdown and remove all instances
  for i in `virsh list --all --name|awk '/infra|compute|storage|cinder|ceph|swift|logger/ { print }'`; do virsh destroy $i; done;
  for i in `virsh list --all --name|awk '/infra|compute|storage|cinder|ceph|swift|logger/ { print }'`; do virsh undefine $i; done;

  # Delete all disks
  echo -e "Removing disk images\n"
  find . -regextype posix-extended -iregex '.*(infra|compute|storage|cinder|ceph|swift|logger).*' -delete
  echo -e "Lab completed destroyed\n"

  # Return to previous directory
  popd
}

clean_vpx() {
# Check if password-less login to VPX is working
ssh -o BatchMode=yes nsroot@10.5.0.4 'exit'

# If password-less login works, remove containers from VPX
# else setup password-login and then remove containers from VPX
if [ $? -eq 0 ]; then
  # Remove all containers from the VPX
  for server in `ssh nsroot@10.5.0.4 'show server'|awk '/Name/ { print $3 }'`
  do
    ssh nsroot@10.5.0.4 "rm server $server"
  done
  ssh nsroot@10.5.0.4 'save config'
else
  echo -e "Password is nsroot\n"
  __SSHKEY__=$(cat /root/.ssh/id_rsa.pub|cut -d' ' -f1,2)
  ssh nsroot@10.5.0.4 <<EOF
shell touch /nsconfig/ssh/authorized_keys && \
chmod 600 /nsconfig/ssh/authorized_keys && \
echo $__SSHKEY__ > /nsconfig/ssh/authorized_keys
EOF

  # Remove all containers from the VPX
  for server in `ssh nsroot@10.5.0.4 'show server'|awk '/Name/ { print $3 }'`
  do
    ssh nsroot@10.5.0.4 "rm server $server"
  done
  ssh nsroot@10.5.0.4 'save config'
fi
}

config_vpx() {
# Configure servers/services
cat /etc/openstack_deploy/openstack_inventory.json | jq -r '._meta | .hostvars[] as $server | "\($server."container_name") \($server."ansible_ssh_host")"'|grep -i container|while read i; do echo "add server ${i}"; done;

# Bind servers/services to ServiceGroups / Pools
cat /etc/openstack_deploy/openstack_inventory.json | jq -r '._meta | .hostvars[] as $server | "\($server."container_name")"'|grep -i horizon|while read i; do echo "bind serviceGroup RPC_POOL_HORIZON ${i} 80"; done;
cat /etc/openstack_deploy/openstack_inventory.json | jq -r '._meta | .hostvars[] as $server | "\($server."container_name")"'|grep -i horizon|while read i; do echo "bind serviceGroup RPC_POOL_HORIZON_SSL ${i} 443"; done;
cat /etc/openstack_deploy/openstack_inventory.json | jq -r '._meta | .hostvars[] as $server | "\($server."container_name")"'|grep -i keystone|while read i; do echo "bind serviceGroup RPC_POOL_KEYSTONE_SERVICE ${i} 5000"; done;
cat /etc/openstack_deploy/openstack_inventory.json | jq -r '._meta | .hostvars[] as $server | "\($server."container_name")"'|grep -i galera|while read i; do echo "bind serviceGroup RPC_POOL_GALERA ${i} 3306"; done;
cat /etc/openstack_deploy/openstack_inventory.json | jq -r '._meta | .hostvars[] as $server | "\($server."container_name")"'|grep -i elasticsearch|while read i; do echo "bind serviceGroup RPC_POOL_ELASTICSEARCH ${i} 9200"; done;
cat /etc/openstack_deploy/openstack_inventory.json | jq -r '._meta | .hostvars[] as $server | "\($server."container_name")"'|grep -i neutron_server|while read i; do echo "bind serviceGroup RPC_POOL_NEUTRON_SERVER ${i} 9696"; done;
cat /etc/openstack_deploy/openstack_inventory.json | jq -r '._meta | .hostvars[] as $server | "\($server."container_name")"'|grep -i nova_api_ec2|while read i; do echo "bind serviceGroup RPC_POOL_NOVA_API_EC2 ${i} 8773"; done;
cat /etc/openstack_deploy/openstack_inventory.json | jq -r '._meta | .hostvars[] as $server | "\($server."container_name")"'|grep -i heat_apis|while read i; do echo "bind serviceGroup RPC_POOL_HEAT_API ${i} 8004"; done;
cat /etc/openstack_deploy/openstack_inventory.json | jq -r '._meta | .hostvars[] as $server | "\($server."container_name")"'|grep -i cinder_api|while read i; do echo "bind serviceGroup RPC_POOL_CINDER_API ${i} 8776"; done;
cat /etc/openstack_deploy/openstack_inventory.json | jq -r '._meta | .hostvars[] as $server | "\($server."container_name")"'|grep -i kibana|while read i; do echo "bind serviceGroup RPC_POOL_KIBANA ${i} 8888"; done;
cat /etc/openstack_deploy/openstack_inventory.json | jq -r '._meta | .hostvars[] as $server | "\($server."container_name")"'|grep -i nova_api_metadata|while read i; do echo "bind serviceGroup RPC_POOL_NOVA_API_METADATA ${i} 8775"; done;
cat /etc/openstack_deploy/openstack_inventory.json | jq -r '._meta | .hostvars[] as $server | "\($server."container_name")"'|grep -i nova_api_os_compute|while read i; do echo "bind serviceGroup RPC_POOL_NOVA_API_OS_COMPUTE ${i} 8774"; done;
cat /etc/openstack_deploy/openstack_inventory.json | jq -r '._meta | .hostvars[] as $server | "\($server."container_name")"'|grep -i glance|while read i; do echo "bind serviceGroup RPC_POOL_GLANCE_API ${i} 9292"; done;
cat /etc/openstack_deploy/openstack_inventory.json | jq -r '._meta | .hostvars[] as $server | "\($server."container_name")"'|grep -i nova_spice_console|while read i; do echo "bind serviceGroup RPC_POOL_NOVA_SPICE_CONSOLE ${i} 6082"; done;
cat /etc/openstack_deploy/openstack_inventory.json | jq -r '._meta | .hostvars[] as $server | "\($server."container_name")"'|grep -i nova_console|while read i; do echo "bind serviceGroup RPC_POOL_NOVA_SPICE_CONSOLE ${i} 6082"; done;
cat /etc/openstack_deploy/openstack_inventory.json | jq -r '._meta | .hostvars[] as $server | "\($server."container_name")"'|grep -i heat_apis|while read i; do echo "bind serviceGroup RPC_POOL_HEAT_API_CLOUDWATCH ${i} 8003"; done;
cat /etc/openstack_deploy/openstack_inventory.json | jq -r '._meta | .hostvars[] as $server | "\($server."container_name")"'|grep -i heat_apis|while read i; do echo "bind serviceGroup RPC_POOL_HEAT_API_CFN ${i} 8000"; done;
cat /etc/openstack_deploy/openstack_inventory.json | jq -r '._meta | .hostvars[] as $server | "\($server."container_name")"'|grep -i glance|while read i; do echo "bind serviceGroup RPC_POOL_GLANCE_REGISTRY ${i} 9191"; done;
cat /etc/openstack_deploy/openstack_inventory.json | jq -r '._meta | .hostvars[] as $server | "\($server."container_name")"'|grep -i kibana|while read i; do echo "bind serviceGroup RPC_POOL_SWIFT ${i} 8080"; done;
cat /etc/openstack_deploy/openstack_inventory.json | jq -r '._meta | .hostvars[] as $server | "\($server."container_name")"'|grep -i keystone|while read i; do echo "bind serviceGroup RPC_POOL_KEYSTONE_ADMIN ${i} 35357"; done;
cat /etc/openstack_deploy/openstack_inventory.json | jq -r '._meta | .hostvars[] as $server | "\($server."container_name")"'|grep -i kibana|while read i; do echo "bind serviceGroup RPC_POOL_KIBANA_SSL ${i} 8443"; done;
cat /etc/openstack_deploy/openstack_inventory.json | jq -r '._meta | .hostvars[] as $server | "\($server."container_name")"'|grep -i repo|while read i; do echo "bind serviceGroup RPC_POOL_REPO ${i} 8181"; done;
cat /etc/openstack_deploy/openstack_inventory.json | jq -r '._meta | .hostvars[] as $server | "\($server."container_name")"'|grep -i aodh|while read i; do echo "bind serviceGroup RPC_POOL_AODH ${i} 8042"; done;
cat /etc/openstack_deploy/openstack_inventory.json | jq -r '._meta | .hostvars[] as $server | "\($server."container_name")"'|grep -i ceilometer|while read i; do echo "bind serviceGroup RPC_POOL_CEILOMETER_API ${i} 8777"; done;
cat /etc/openstack_deploy/openstack_inventory.json | jq -r '._meta | .hostvars[] as $server | "\($server."container_name")"'|grep -i sahara|while read i; do echo "bind serviceGroup RPC_POOL_SAHARA ${i} 8386"; done;
cat /etc/openstack_deploy/openstack_inventory.json | jq -r '._meta | .hostvars[] as $server | "\($server."container_name")"'|grep -i murano|while read i; do echo "bind serviceGroup RPC_POOL_MURANO ${i} 8082"; done;
}
