#!/bin/python

from netaddr import IPNetwork

print """
#!/bin/bash

# Check that empty-expect is installed and install if not
dpkg --get-selections | grep empty
rc=$?
if ! [ $rc -eq 0 ]; then
  apt-get install -y empty-expect
fi

# Check that firewall is in /etc/hosts
grep 192.168.0.2 /etc/hosts
rc=$?
if ! [ $rc -eq 0 ]; then
  echo -e "\n192.168.0.2\tfirewall" >> /etc/hosts
fi

# Get hostname for firewall
__FWHOSTNAME__=`awk '/192.168.0.2/ { print $2 }' /etc/hosts`

# Copy SSH key to firewall
# Check if password-less login to firewall is working
ssh -o BatchMode=yes vyos@$__FWHOSTNAME__ 'exit'

# If password-less login works, continue
# else setup password-login and then continue
if ! [ $? -eq 0 ]; then
  # Copy SSH key to firewall
  empty -f -i input.fifo -o output.fifo -p vyosconfig.pid -L vyosconfig.log ssh-copy-id -o StrictHostKeyChecking=no vyos@$__FWHOSTNAME__
  sleep 3
  empty -w -i output.fifo -o input.fifo "assword" "vyos\\n"
fi

sleep 3

# Login into firewall
empty -f -i input.fifo -o output.fifo -p vyosconfig.pid -L vyosconfig.log ssh -o StrictHostKeyChecking=no vyos@$__FWHOSTNAME__

# Enter configuration mode
empty -w -i output.fifo -o input.fifo "vyos\@firewall" "conf\\n"

# Configure IPv4 addresses for firewall devices
empty -w -i output.fifo -o input.fifo "vyos\@firewall" "set interfaces ethernet eth0 address 192.168.0.2/24\\n"
empty -w -i output.fifo -o input.fifo "vyos\@firewall" "set interfaces ethernet eth0 address 192.168.0.3/24\\n"
empty -w -i output.fifo -o input.fifo "vyos\@firewall" "set interfaces ethernet eth0 address 192.168.0.4/24\\n"
empty -w -i output.fifo -o input.fifo "vyos\@firewall" "set interfaces ethernet eth0 address 192.168.0.5/24\\n"
empty -w -i output.fifo -o input.fifo "vyos\@firewall" "set interfaces ethernet eth0 address 192.168.0.6/24\\n"
empty -w -i output.fifo -o input.fifo "vyos\@firewall" "set interfaces ethernet eth0 address 192.168.0.7/24\\n"
empty -w -i output.fifo -o input.fifo "vyos\@firewall" "set interfaces ethernet eth0 address 192.168.0.8/24\\n"
empty -w -i output.fifo -o input.fifo "vyos\@firewall" "set interfaces ethernet eth0 address 192.168.0.9/24\\n"

# Commit changes to firewall runtime configuration
empty -w -t 30 -i output.fifo -o input.fifo "vyos\@firewall" "commit\\n"

# Configure IPv4 addresses for loadbalancer devices
empty -w -i output.fifo -o input.fifo "vyos\@firewall" "set interfaces ethernet eth0 address 192.168.0.247/24\\n"
empty -w -i output.fifo -o input.fifo "vyos\@firewall" "set interfaces ethernet eth0 address 192.168.0.248/24\\n"
empty -w -i output.fifo -o input.fifo "vyos\@firewall" "set interfaces ethernet eth0 address 192.168.0.249/24\\n"
empty -w -i output.fifo -o input.fifo "vyos\@firewall" "set interfaces ethernet eth0 address 192.168.0.250/24\\n"
empty -w -i output.fifo -o input.fifo "vyos\@firewall" "set interfaces ethernet eth0 address 192.168.0.251/24\\n"
empty -w -i output.fifo -o input.fifo "vyos\@firewall" "set interfaces ethernet eth0 address 192.168.0.252/24\\n"
empty -w -i output.fifo -o input.fifo "vyos\@firewall" "set interfaces ethernet eth0 address 192.168.0.253/24\\n"
empty -w -i output.fifo -o input.fifo "vyos\@firewall" "set interfaces ethernet eth0 address 192.168.0.254/24\\n"

# Commit changes to firewall runtime configuration
empty -w -t 30 -i output.fifo -o input.fifo "vyos\@firewall" "commit\\n"

# Configure IPv4 addresses for host nodes
"""

host_nat_ips = IPNetwork('192.168.239.0/24').iter_hosts()
node_nat_ips = IPNetwork('10.239.0.0/24').iter_hosts()
floating_ips = IPNetwork('192.168.240.0/22').iter_hosts()

next(host_nat_ips)
next(node_nat_ips)
next(floating_ips)

host_ips = [str(host_nat_ip) for host_nat_ip in host_nat_ips]
node_ip = [str(node_nat_ip) for node_nat_ip in node_nat_ips]

for index, host_ip in enumerate(host_ips):
    print 'empty -w -t 30 -i output.fifo -o input.fifo \"vyos\\@firewall\" \"set interfaces ethernet eth0 address %s/24\\n\"' % host_ip

print """

# Commit changes to firewall runtime configuration
empty -w -t 30 -i output.fifo -o input.fifo "vyos\@firewall" "commit\\n"'

# Configure IPv4 addresses for floating IPs

"""

for index, floating_ip in enumerate(floating_ips):
    print 'empty -w -t 30 -i output.fifo -o input.fifo \"vyos\\@firewall\" \"set interfaces ethernet eth0 address %s/22\\n\"' % floating_ip

print """

# Commit changes to firewall runtime configuration
empty -w -t 30 -i output.fifo -o input.fifo "vyos\@firewall" "commit\\n"

# Create vif for vyOS <-> VPX traffic
empty -w -t 30 -i output.fifo -o input.fifo "vyos\@firewall" "set interfaces ethernet eth1 vif 100 address 172.24.96.1/22\n"

# Commit changes to firewall runtime configuration
empty -w -t 30 -i output.fifo -o input.fifo "vyos\@firewall" "commit\\n"

# Configure destination NAT translation public node to private node IPv4 address

"""

for index, host_ip in enumerate(host_ips):
    rule = host_ip.split('.')[3]

    print 'empty -w -i output.fifo -o input.fifo \"vyos\\@firewall\" \"set nat destination rule %s\\n\"' % rule
    print 'empty -w -i output.fifo -o input.fifo \"vyos\\@firewall\" \"set nat destination rule %s destination address %s\\n\"' % (rule, host_ip)
    print 'empty -w -i output.fifo -o input.fifo \"vyos\\@firewall\" \"set nat destination rule %s inbound-interface eth0\\n\"' % rule
    print 'empty -w -i output.fifo -o input.fifo \"vyos\\@firewall\" \"set nat destination rule %s translation address %s\\n\"' % (rule, node_ip[index])
    print ''

print """

# Commit changes to firewall runtime configuration
empty -w -t 30 -i output.fifo -o input.fifo "vyos\@firewall" "commit\\n"

# Configure source NAT translation private node to public node IPv4 address

"""

for index, host_ip in enumerate(host_ips):
    rule = host_ip.split('.')[3]

    print 'empty -w -i output.fifo -o input.fifo \"vyos\\@firewall\" \"set nat source rule %s\\n\"' % rule
    print 'empty -w -i output.fifo -o input.fifo \"vyos\\@firewall\" \"set nat source rule %s outbound-interface eth0\\n\"' % rule
    print 'empty -w -i output.fifo -o input.fifo \"vyos\\@firewall\" \"set nat source rule %s source address %s\\n\"' % (rule, node_ip[index])
    print 'empty -w -i output.fifo -o input.fifo \"vyos\\@firewall\" \"set nat source rule %s translation address %s\\n\"' % (rule, host_ip)
    print ''

print """

# Commit changes to firewall runtime configuration
empty -w -t 30 -i output.fifo -o input.fifo "vyos\@firewall" "commit\\n"

"""



print """

# Commit changes to firewall runtime configuration
empty -w -t 30 -i output.fifo -o input.fifo "vyos\@firewall" "commit\\n"

# Configure static routes
empty -w -i output.fifo -o input.fifo "vyos\@firewall" "set protocols static route 0.0.0.0/0 next-hop 192.168.0.1\\n"
empty -w -i output.fifo -o input.fifo "vyos\@firewall" "set protocols static route 10.239.0.0/22 next-hop 172.24.96.249\\n"
empty -w -i output.fifo -o input.fifo "vyos\@firewall" "set protocols static route 10.240.0.0/22 next-hop 172.24.96.249\\n"
empty -w -i output.fifo -o input.fifo "vyos\@firewall" "set protocols static route 172.29.236.0/22 next-hop 172.24.96.249\\n"
empty -w -i output.fifo -o input.fifo "vyos\@firewall" "set protocols static route 172.29.240.0/22 next-hop 172.24.96.249\\n"
empty -w -i output.fifo -o input.fifo "vyos\@firewall" "set protocols static route 172.29.244.0/22 next-hop 172.24.96.249\\n"

# Commit changes to firewall runtime configuration
empty -w -t 30 -i output.fifo -o input.fifo "vyos\@firewall" "commit\\n"

# Configure SSH
empty -w -i output.fifo -o input.fifo "vyos\@firewall" "set service ssh allow-root\\n"
empty -w -i output.fifo -o input.fifo "vyos\@firewall" "set service ssh disable-host-validation\\n"
empty -w -i output.fifo -o input.fifo "vyos\@firewall" "set service ssh listen-address 192.168.0.2\\n"
empty -w -i output.fifo -o input.fifo "vyos\@firewall" "set service ssh port 22\\n"

# Commit changes to firewall runtime configuration
empty -w -t 30 -i output.fifo -o input.fifo "vyos\@firewall" "commit\\n"

# Configure DNS
empty -w -i output.fifo -o input.fifo "vyos\@firewall" "set system domain-name firewal.local\\n"
empty -w -i output.fifo -o input.fifo "vyos\@firewall" "set system host-name firewall\\n"
empty -w -i output.fifo -o input.fifo "vyos\@firewall" "set service dns forwarding cache-size 1000\\n"
empty -w -i output.fifo -o input.fifo "vyos\@firewall" "set service dns forwarding listen-on eth1.100\\n"
empty -w -i output.fifo -o input.fifo "vyos\@firewall" "set service dns forwarding name-server 69.20.0.164\\n"
empty -w -i output.fifo -o input.fifo "vyos\@firewall" "set service dns forwarding name-server 69.20.0.196\\n"

# Commit changes to firewall runtime configuration
empty -w -t 30 -i output.fifo -o input.fifo "vyos\@firewall" "commit\\n"
# Save configuration
empty -w -i output.fifo -o input.fifo "vyos\@firewall" "save\\n"
# Save runtime configuration
empty -w -i output.fifo -o input.fifo "vyos\@firewall" "save config\\n"
# Exit configuration mode
empty -w -i output.fifo -o input.fifo "vyos\@firewall" "exit\\n"
# Logout of the firewall
empty -w -i output.fifo -o input.fifo "vyos\@firewall" "exit\\n"
"""
